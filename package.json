{
  "author": "Cuak McCuackl <cuak.mccuakl@cuaklabs.com>",
  "bugs": {
    "url": "https://github.com/cuaklabs/duck-poker/issues"
  },
  "dependencies": {
    "dotenv": "^14.3.2",
    "ioredis": "^4.28.3",
    "mongodb": "^4.5.0",
    "ws": "^8.5.0"
  },
  "description": "Duck Poker backend",
  "devDependencies": {
    "@commitlint/cli": "^16.2.3",
    "@commitlint/config-conventional": "^16.2.1",
    "@commitlint/prompt-cli": "^16.2.3",
    "@types/ioredis": "^4.28.10",
    "@types/jest": "^27.4.1",
    "@types/ws": "^8.2.2",
    "@typescript-eslint/eslint-plugin": "^5.21.0",
    "@typescript-eslint/parser": "^5.21.0",
    "commander": "^9.2.0",
    "eslint": "^8.14.0",
    "eslint-plugin-import": "^2.26.0",
    "eslint-plugin-jest": "^26.1.5",
    "eslint-plugin-prettier": "^4.0.0",
    "husky": "^7.0.4",
    "jest": "^27.4.7",
    "lerna": "^4.0.0",
    "lint-staged": "^12.4.1",
    "prettier": "^2.6.2",
    "rimraf": "^3.0.2",
    "shelljs": "^0.8.5",
    "ts-jest": "^27.1.4",
    "ts-node": "^10.7.0",
    "typescript": "^4.6.3"
  },
  "homepage": "https://github.com/cuaklabs/duck-poker#readme",
  "keywords": [
    "agile",
    "scrum",
    "planning"
  ],
  "license": "MIT",
  "lint-staged": {
    "*.js": [
      "prettier --write"
    ],
    "*.ts": [
      "prettier --write",
      "eslint"
    ]
  },
  "name": "root",
  "private": true,
  "repository": {
    "type": "git",
    "url": "git+https://github.com/cuaklabs/duck-poker.git"
  },
  "scripts": {
    "build:dev": "tsc --build tsconfig.packages.dev.json",
    "build": "tsc --build tsconfig.packages.json",
    "build:clean": "node ./scripts/removeTypescriptCompiledFiles.mjs",
    "commit": "commit",
    "docker:down:test": "node ./scripts/stopDockerTestServices.mjs",
    "docker:up:test": "node ./scripts/launchDockerTestServices.mjs",
    "docker:up:test:ci": "npm run docker:up:test -- -d",
    "format": "prettier --write ./packages",
    "lint": "eslint --ext ts --ignore-path .gitignore .",
    "packages:link": "node ./scripts/cretateSymlinks.mjs",
    "prebuild": "pnpm run build:clean",
    "prepare": "husky install",
    "prepublish:packages": "npm run build && npm t",
    "publish:packages": "lerna publish from-package",
    "test:coverage": "npm run test -- --coverage",
    "test:integration": "jest --config=config/jest/jest.config.js --selectProjects Integration",
    "test:integration:js": "jest --config=config/jest/jest.js.config.js --selectProjects Integration",
    "test:js": "jest --config=config/jest/jest.js.config.js --selectProjects Unit Integration",
    "test:js:ci": "npm run test:js -- --ci",
    "test:js:coverage": "npm run test:js -- --coverage",
    "test:js:ci:coverage": "npm run test:js -- --ci --coverage",
    "test:master": "npm run test -- --changedSince=origin/master",
    "test:package:env": "jest --config=config/jest/jest.config.js --selectProjects env-Integration env-Unit",
    "test:package:env:js": "jest --config=config/jest/jest.js.config.js --selectProjects env-Integration env-Unit",
    "test:package:env:js:ci:coverage": "npm run test:package:env:js -- --ci --coverage",
    "test:package:redis": "jest --config=config/jest/jest.config.js --selectProjects redis-Integration redis-Unit",
    "test:package:redis:js": "jest --config=config/jest/jest.js.config.js --selectProjects redis-Integration redis-Unit",
    "test:package:redis:js:ci:coverage": "npm run test:package:redis:js -- --ci --coverage",
    "test:package:testUtils": "jest --config=config/jest/jest.config.js --selectProjects testUtils-Integration testUtils-Unit",
    "test:package:testUtils:js": "jest --config=config/jest/jest.js.config.js --selectProjects testUtils-Integration testUtils-Unit",
    "test:package:testUtils:js:ci:coverage": "npm run test:package:testUtils:js -- --ci --coverage",
    "test:package:ws": "jest --config=config/jest/jest.config.js --selectProjects ws-Integration ws-Unit",
    "test:package:ws:js": "jest --config=config/jest/jest.js.config.js --selectProjects ws-Integration ws-Unit",
    "test:package:ws:js:ci:coverage": "npm run test:package:ws:js -- --ci --coverage",
    "test:previous": "npm run test -- --changedSince=HEAD~1",
    "test:unit": "jest --config=config/jest/jest.config.js --selectProjects Unit",
    "test:unit:js": "jest --config=config/jest/jest.js.config.js --selectProjects Unit",
    "test": "jest --config=config/jest/jest.config.js --selectProjects Unit Integration"
  }
}
